{"version":3,"sources":["WaveformGenerator.promises.old.js"],"names":["WaveformGenerator","audioBuffer","settingsObject","_drawBar","index","height","width","_settings","bar","gap","Math","abs","x","y","waveform","path","document","createElement","align","setAttribute","className","_svg","id","appendChild","_bufferMeasure","position","length","data","sum","i","ref","pow","sqrt","_extractBuffer","buffer","getChannelData","sections","len","floor","maxHeight","vals","push","scale","max","apply","j","val","_mergeSettings","source","target","p","constructor","Object","e","fileArrayBuffer","guid","setAttributeNS","_svgStyleSheet","createTextNode","color","Promise","res","rej","_audioContext","decodeAudioData","outerHTML","AudioContext","WebkitAudioContext","random","toString","substring"],"mappings":"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","file":"WaveformGenerator.promises.old.js","sourcesContent":["var WaveformGenerator = (function(audioBuffer, settingsObject) {\r\n    var _settings = {\r\n        waveform: {\r\n            width: 500,\r\n            height: 80,\r\n            color: '#bada55'\r\n        },\r\n        bar: {\r\n            align: 'center',\r\n            width: 1,\r\n            gap: 0\r\n        }\r\n    },\r\n    _audioContext = new AudioContext() || new WebkitAudioContext(),\r\n    _svg = null, \r\n    _svgStyleSheet = null,\r\n    guid = function() {\r\n      return 'a' + Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1) + 'b' + Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    };\r\n    \r\n    function _drawBar(index, height) {\r\n        var width = _settings.bar.width;\r\n        if (_settings.bar.gap !== 0) {\r\n            width *= Math.abs(100 - _settings.bar.gap) / 100;\r\n        }\r\n        var x = index + (width / 2),\r\n            y = _settings.waveform.height / 2 - height / 2,\r\n            path = document.createElement('path');\r\n        switch (_settings.bar.align) {\r\n            case 'top':\r\n                y = 0;\r\n                break;\r\n            case 'center':\r\n                y = _settings.waveform.height / 2 - height / 2;\r\n                break;\r\n            case 'bottom':\r\n                y = _settings.waveform.height - height;\r\n        }\r\n        path.setAttribute('d', 'M' + x + ' ' + y + ' L' + x + ' ' + y + ' L' + x + ' ' + (y + height) + ' L' + x + ' ' + (y + height) + ' L' + x + ' ' + y + ' Z');\r\n        path.className = _svg.id;\r\n        _svg.appendChild(path);\r\n    }\r\n\r\n    function _bufferMeasure(position, length, data) {\r\n        var sum = 0.0;\r\n        for (var i = position, ref = (position + length) - 1; position <= ref ? i <= ref : i >= ref; position <= ref ? i++ : i--) {\r\n            sum += Math.pow(data[i], 2);\r\n        }\r\n        return Math.sqrt(sum / data.length);\r\n    }\r\n\r\n    function _extractBuffer(buffer) {\r\n        buffer = buffer.getChannelData(0);\r\n        var sections = _settings.waveform.width;\r\n        var len = Math.floor(buffer.length / sections);\r\n        var maxHeight = _settings.waveform.height;\r\n        var vals = [];\r\n        for (var i = 0; i < sections; i += _settings.bar.width) {\r\n            vals.push(_bufferMeasure(i * len, len, buffer) * 10000);\r\n        }\r\n        var scale = maxHeight / Math.max.apply(null, vals);\r\n        for (var j = 0; j < sections; j += _settings.bar.width) {\r\n            var val = _bufferMeasure(j * len, len, buffer) * 10000;\r\n            val *= scale;\r\n            val += 1;\r\n            _drawBar(j, val);\r\n        }\r\n        if (i >= sections) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function _mergeSettings(source, target) {\r\n        for (var p in target) {\r\n          try {\r\n            if (target[p].constructor == Object) {\r\n              source[p] = _mergeSettings(source[p], target[p]);\r\n            }\r\n            else {\r\n              source[p] = target[p];\r\n            }\r\n          } catch(e) {\r\n          source[p] = target[p];\r\n          }\r\n        }\r\n        return source;\r\n    }\r\n\r\n    // Constructor\r\n    function WaveformGenerator(fileArrayBuffer, settingsObject) {\r\n      _mergeSettings(_settings, settingsObject);\r\n      _svg = document.createElement('svg');\r\n      _svg.id = guid();\r\n      _svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\r\n      _svg.setAttribute('version', '1.1');\r\n      _svg.setAttributeNS(null, 'viewBox', '0 0 ' + _settings.waveform.width + ' ' + _settings.waveform.height);\r\n      _svgStyleSheet = document.createElement('style');\r\n      _svgStyleSheet.setAttribute('type', 'text/css');\r\n      _svgStyleSheet.appendChild(document.createTextNode('<![CDATA[path.'+_svg.id+'{stroke:' + _settings.waveform.color + '}]]>'));\r\n      _svg.appendChild(_svgStyleSheet);\r\n      return new Promise(function(res,rej) {\r\n        _audioContext.decodeAudioData(fileArrayBuffer, function(audioBuffer) {\r\n          if (_extractBuffer(audioBuffer)) {\r\n            res(_svg.outerHTML);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    return WaveformGenerator;\r\n})();"],"sourceRoot":"/source/"}