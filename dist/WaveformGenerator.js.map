{"version":3,"sources":["WaveformGenerator.js"],"names":["WaveformGenerator","audioBuffer","settingsObject","guid","Math","floor","random","toString","substring","drawBar","index","barHeight","barWidth","settings","bar","width","gap","abs","y","x","align","waveform","height","drawMode","ctx","canvas","getContext","fillStyle","color","fillRect","path","document","createElement","setAttribute","className","svg","id","appendChild","bufferMeasure","position","length","data","sum","i","ref","pow","sqrt","extractBuffer","buffer","getChannelData","sections","len","maxHeight","vals","push","scale","max","apply","j","val","fileArrayBuffer","Object","assign","setAttributeNS","svgStyleSheet","createTextNode","Promise","resolve","reject","audioContext","decodeAudioData","outerHTML","AudioContext","WebkitAudioContext"],"mappings":"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","file":"WaveformGenerator.js","sourcesContent":["var WaveformGenerator = (function(audioBuffer, settingsObject) {\n  var settings = {\n    waveform: {\n      width: 500,\n      height: 80,\n      color: '#bada55'\n    },\n    bar: {\n      align: 'center',\n      width: 1,\n      gap: 0\n    },\n    drawMode: 'png'\n  };\n\n  var audioContext = new AudioContext() || new WebkitAudioContext();\n  var svg = null;\n  var svgStyleSheet = null;\n  var canvas = document.createElement('canvas');\n\n  function guid() {\n    return 'a' + Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1) + 'b' + Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n    \n  function drawBar(index, barHeight) {\n    var barWidth = settings.bar.width;\n\n    if (settings.bar.gap !== 0) {\n      barWidth *= Math.abs(100 - settings.bar.gap) / 100;\n    }\n\n    var x = index + (barWidth / 2);\n    var y;\n\n    switch (settings.bar.align) {\n      case 'top':\n        y = 0;\n        break;\n      case 'center':\n        y = settings.waveform.height / 2 - barHeight / 2;\n        break;\n      case 'bottom':\n        y = settings.waveform.height - barHeight;\n        break;\n    }\n\n    if (settings.drawMode === 'png') {\n      var ctx = canvas.getContext('2d');\n      ctx.fillStyle = settings.waveform.color;\n      ctx.fillRect(x, y, barWidth, barHeight);\n    }\n    else if (settings.drawMode === 'svg') {\n      var path = document.createElement('path');\n\n      path.setAttribute('d', 'M' + x + ' ' + y + ' L' + x + ' ' + y + ' L' + x + ' ' + (y + barHeight) + ' L' + x + ' ' + (y + barHeight) + ' L' + x + ' ' + y + ' Z');\n      path.className = svg.id;\n\n      svg.appendChild(path);\n    }\n  }\n\n  function bufferMeasure(position, length, data) {\n    var sum = 0.0;\n    for (var i = position, ref = (position + length) - 1; position <= ref ? i <= ref : i >= ref; position <= ref ? i++ : i--) {\n      sum += Math.pow(data[i], 2);\n    }\n    return Math.sqrt(sum / data.length);\n  }\n\n  function extractBuffer(buffer) {\n    buffer = buffer.getChannelData(0);\n    var sections = settings.waveform.width;\n    var len = Math.floor(buffer.length / sections);\n    var maxHeight = settings.waveform.height;\n\n    var vals = [];\n\n    for (var i = 0; i < sections; i += settings.bar.width) {\n      vals.push(bufferMeasure(i * len, len, buffer) * 10000);\n    }\n\n    var scale = maxHeight / Math.max.apply(null, vals);\n\n    for (var j = 0; j < sections; j += settings.bar.width) {\n      var val = bufferMeasure(j * len, len, buffer) * 10000;\n      val *= scale;\n      val += 1;\n      drawBar(j, val);\n    }\n\n    if (i >= sections) {\n      return true;\n    }\n  }\n\n  // Constructor\n  function WaveformGenerator(fileArrayBuffer, settingsObject) {\n    // Merge objects\n    Object.assign(settings, settingsObject);\n\n    svg = document.createElement('svg');\n    svg.id = guid();\n    svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n    svg.setAttribute('version', '1.1');\n    svg.setAttributeNS(null, 'viewBox', '0 0 ' + settings.waveform.width + ' ' + settings.waveform.height);\n\n    svgStyleSheet = document.createElement('style');\n    svgStyleSheet.setAttribute('type', 'text/css');\n    svgStyleSheet.appendChild(document.createTextNode('<![CDATA[path.'+svg.id+'{stroke:' + settings.waveform.color + ';stroke-width:' + ((settings.bar.width !== 0) ? (settings.bar.width * Math.abs(1 - settings.bar.gap)) : settings.bar.width) + '}]]>'));\n\n    svg.appendChild(svgStyleSheet);\n\n    return new Promise(function(resolve, reject) {\n      audioContext.decodeAudioData(fileArrayBuffer, function(audioBuffer) {\n        if (extractBuffer(audioBuffer)) {\n          resolve(svg.outerHTML);\n        }\n      });\n    });\n  }\n\n  return WaveformGenerator;\n})();"],"sourceRoot":"/source/"}